@page "/DataBinding/DropDown"

@using BlazorECommersData

<div class="row">

    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr />
        Name : @product.Name
        <br />
        Price : @product.Price
        <br />
        Product Properties Selected : @SelectedProp
        <br />

        @if (!string.IsNullOrEmpty(SelectedProp))
        {
            <p>Product Properties Value : @product.ProductProperties.FirstOrDefault(item => item.Key.Equals(SelectedProp)).Value</p>
        }
    </div>

    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        <div>
            Price :
            <input type="number" @bind-value="product.Price" />

        </div>

        <div>
            Product properties :
            <select @bind="SelectedProp">
                @foreach (var item in product.ProductProperties)
                {
                    <option value="@item.Key">@item.Key</option>
                }
            </select>
        </div>
    </div>

</div>

<div class="col-12 pt-4">
    <h2 class="text-success">Product Table</h2>
    <table class="table table-striped">
        <tbody>
            @foreach (var item in Products)
            {
                <tr>
                    <td>
                        <input type="text" @bind-value="item.Name" @bind-value:event="oninput" />
                    </td>
                    <td>
                        <input type="text" @bind-value="item.Price" @bind-value:event="oninput" />
                    </td>
                    <td>
                        <input type="checkbox" @bind-value="item.IsActive" checked="@(item.IsActive? "checked":null)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Product Summary</h2>
    @foreach (var item in Products)
    {
        <p>@item.Name [@item.Price] is @(item.IsActive ? "Active" : "InActive")</p>
    }
</div>




@code {

    private string SelectedProp = string.Empty;

    Demo_Product product = new()
    {
        Id = 1,
        Name = "Yankee Candle",
        IsActive = true,
        Price = 9.99,
        ProductProperties = new List<DemoProductProp>()
{
            new DemoProductProp{ Id = 1, Key = "Color", Value = "Black" },
            new DemoProductProp{Id =2, Key = "Flavor", Value = "Rose Jasmine"},
            new DemoProductProp{Id = 3, Key = "size", Value = "20oz"}
        }
    };
    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Products.Add(new Demo_Product
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 9.99,
            ProductProperties = new()
{
                new DemoProductProp() { Id = 1, Key = "Flavor", Value = "Rose" },
                new DemoProductProp() { Id = 2, Key = "Size", Value = "20oz" },
                new DemoProductProp(){Id=3, Key ="Color", Value = "Purple"}
            }
        });
        Products.Add(new Demo_Product()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = false,
            Price = 10.49,
            ProductProperties = new()
{
                new DemoProductProp(){Id=1, Key="Flavor", Value="Lily" },
                new DemoProductProp(){Id=2, Key="Size", Value="18oz" },
                new DemoProductProp(){Id=3, Key="Color", Value="White"}
            }
        });
    }

}

